<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="ed495f4f-4df2-4a37-bbfe-2489430a46e8" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2025.3/project-config.xsd">
  <name>Testing</name>
  <description />
  <settings>
    <options>
      <option name="cleanBuild" value="true" />
      <option name="shouldFailBuildOnBadExitCode" value="false" />
    </options>
    <parameters>
      <param name="REQUIREMENT_LEVEL" value="READ_MESH" />
      <param name="env.MPLBACKEND" value="Agg" />
      <param name="env.PATH_TO_ASCII_DRILLHOLES" value="%env.TERRA_PATH_DEVOPS%/boreholes/ASCII_drillholes/" />
      <param name="env.PATH_TO_BGR" value="%env.TERRA_PATH_DEVOPS%/boreholes/" />
      <param name="env.PATH_TO_BOLIDEN" value="%env.TERRA_PATH_DEVOPS%/combined/Leapfrog_OMF/Garpenberg_global_20220715.omf" />
      <param name="env.PATH_TO_GLB" value="%env.TERRA_PATH_DEVOPS%/meshes/GLB - GLTF/Duck.glb" />
      <param name="env.PATH_TO_GLB_COMPLEX" value="%env.TERRA_PATH_DEVOPS%/meshes/GLB - GLTF/GlbFile.glb" />
      <param name="env.PATH_TO_GRAV3D_MOD" value="%env.TERRA_PATH_DEVOPS%/volume/MSH/19_simpeg_inv_result_25ft_7.62m_psi2_Sep.mod" />
      <param name="env.PATH_TO_GRAV3D_MSH" value="%env.TERRA_PATH_DEVOPS%/volume/MSH/client_voxel.msh" />
      <param name="env.PATH_TO_GRAV3D_MSH_II" value="%env.TERRA_PATH_DEVOPS%/volume/MSH/IDN-65/ubc_mesh_mod" />
      <param name="env.PATH_TO_INTERPRETATION" value="%env.TERRA_PATH_DEVOPS%/meshes/Seismic/Anl2-1.tif" />
      <param name="env.PATH_TO_MAGNETIC_INTERPRETATION" value="%env.TERRA_PATH_DEVOPS%/meshes/Magnetic/Plate 2a - Profile 1 2D inversion.pdf" />
      <param name="env.PATH_TO_MTL" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Broadhaven_Obj/model/model.mtl" />
      <param name="env.PATH_TO_OBJ" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Broadhaven_Obj/model/model.obj" />
      <param name="env.PATH_TO_OBJ_FACE_I" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Faces/face1.obj" />
      <param name="env.PATH_TO_OBJ_FACE_II" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Faces/Lapp_458_Rum_19_2_2024-02-21_0820_scan5_geoim4.obj" />
      <param name="env.PATH_TO_OBJ_GALLERIES_I" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Galleries/Solid1.obj" />
      <param name="env.PATH_TO_OBJ_MULTIMATERIAL_II" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/MultiMaterialObj/MultiMaterialObj.obj" />
      <param name="env.PATH_TO_OBJ_SCANS" value="%env.TERRA_PATH_DEVOPS%/meshes/OBJ/Core scans Boliden/rsrbF9l2zc/model.obj" />
      <param name="env.PATH_TO_OMF" value="%env.TERRA_PATH_DEVOPS%/combined/Leapfrog_OMF/Collinstown.omf" />
      <param name="env.PATH_TO_SECTION" value="%env.TERRA_PATH_DEVOPS%/meshes/Seismic/L1_CDP-Coords.txt" />
      <param name="env.PATH_TO_SEISMIC" value="%env.TERRA_PATH_DEVOPS%/meshes/Seismic/Linie01.segy" />
      <param name="env.PATH_TO_SEISMIC_FINAL" value="%env.TERRA_PATH_DEVOPS%/meshes/Seismic/L1_final-mig.sgy" />
      <param name="env.PATH_TO_SPREMBERG_ASSAY" value="%env.TERRA_PATH_DEVOPS%/boreholes/Spremberg/Spremberg_assay.csv" />
      <param name="env.PATH_TO_SPREMBERG_COLLAR" value="%env.TERRA_PATH_DEVOPS%/boreholes/Spremberg/Spremberg_collar_updated.csv" />
      <param name="env.PATH_TO_SPREMBERG_STRATIGRAPHY" value="%env.TERRA_PATH_DEVOPS%/boreholes/Spremberg/Spremberg_stratigraphy.csv" />
      <param name="env.PATH_TO_SPREMBERG_SURVEY" value="%env.TERRA_PATH_DEVOPS%/boreholes/Spremberg/Spremberg_survey.csv" />
      <param name="env.PATH_TO_WEISWEILER" value="%env.TERRA_PATH_DEVOPS%/meshes/Weisweiler/" />
      <param name="env.TERRA_PATH_DEVOPS" value="/home/leguark/DevOps/DevOps/SubsurfaceTestData/" />
    </parameters>
    <build-runners>
      <runner id="Setup" name="Setup" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -euo pipefail

# Helpful debug: see if PYTHON* is set by the agent
env | sort | grep -E '^PYTHON' || true

# Prefer Python 3.13 if present
if command -v python3.13 >/dev/null 2>&1; then
  PYTHON=python3.13
else
  PYTHON=python3
fi

# Create venv while ignoring PYTHON* and user site
$PYTHON -E -s -m venv venv

# Always call venv python with -E -s as well
VENVPY="venv/bin/python -E -s"
VENVPIP="venv/bin/python -E -s -m pip"

$VENVPIP install --upgrade pip setuptools wheel
$VENVPIP install --verbose -r requirements/requirements_dev.txt
$VENVPIP install --verbose teamcity-messages

# Sanity probe
venv/bin/python -E -s - <<'PY'
import sys, encodings
print("OK python:", sys.version)
print("encodings:", encodings.__file__)
print("prefix:", sys.prefix)
PY]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Run_Test" name="Run Test: Core" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -euo pipefail
VENVPY="venv/bin/python -E -s"
VENVPIP="venv/bin/python -E -s -m pip"

# (Core / Plot)
$VENVPIP install --verbose -r requirements/requirements_plot.txt || true
export REQUIREMENT_LEVEL="${REQUIREMENT_LEVEL:-READ_MESH}"
echo "REQUIREMENT_LEVEL is ${REQUIREMENT_LEVEL}"
$VENVPY -m pytest --teamcity -v -m core]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Run_Test_2" name="Run Test: Mesh" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[set -euo pipefail
source venv/bin/activate

pip install --verbose -r requirements/requirements_mesh.txt

export REQUIREMENT_LEVEL="${REQUIREMENT_LEVEL:-READ_MESH}"
echo "REQUIREMENT_LEVEL is ${REQUIREMENT_LEVEL}"

python -m pytest --teamcity -v]]></param>
          <param name="teamcity.step.mode" value="execute_if_failed" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Run_Test_wells" name="Run Test: Wells" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[set -euo pipefail
source venv/bin/activate

pip install --verbose -r requirements/requirements_wells.txt

export REQUIREMENT_LEVEL="${REQUIREMENT_LEVEL:-READ_WELL}"
echo "REQUIREMENT_LEVEL is ${REQUIREMENT_LEVEL}"

python -m pytest --teamcity -v]]></param>
          <param name="teamcity.step.mode" value="execute_if_failed" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Subsurface_HttpsGithubComTerranigmaSolutionsSubsurfaceRefsHeadsMain2" />
    </vcs-settings>
    <build-triggers>
      <build-trigger id="TRIGGER_4" type="vcsTrigger">
        <parameters>
          <param name="branchFilter"><![CDATA[+pr:draft=false
+:refs/heads/main]]></param>
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="perfmon" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_5" type="commit-status-publisher">
        <parameters>
          <param name="github_authentication_type" value="token" />
          <param name="github_host" value="https://api.github.com" />
          <param name="publisherId" value="githubStatusPublisher" />
          <param name="secure:github_access_token" value="credentialsJSON:4df4bdb0-1278-4834-a702-18ae3a286003" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_6" type="pullRequests">
        <parameters>
          <param name="authenticationType" value="token" />
          <param name="filterAuthorRole" value="MEMBER" />
          <param name="providerType" value="github" />
          <param name="secure:accessToken" value="credentialsJSON:4df4bdb0-1278-4834-a702-18ae3a286003" />
        </parameters>
      </extension>
    </build-extensions>
  </settings>
</build-type>

